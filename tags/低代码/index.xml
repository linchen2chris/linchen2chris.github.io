<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>低代码 on Even - A super concise theme for Hugo</title><link>http://localhost:1313/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/</link><description>Recent content in 低代码 on Even - A super concise theme for Hugo</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 10 Apr 2025 15:25:35 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E4%BD%8E%E4%BB%A3%E7%A0%81/index.xml" rel="self" type="application/rss+xml"/><item><title>低代码</title><link>http://localhost:1313/post/low-code/</link><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/low-code/</guid><description>&lt;h2 id="低代码"&gt;低代码&lt;/h2&gt;
&lt;h3 id="m-项目"&gt;M 项目&lt;/h3&gt;
&lt;p&gt;去年 3 月，上了一个 M 项目，当时客户想要做一个工作流平台给 People 团队来支撑员工入离职·请假等流程。客户前期在技术选型方面和以往的项目都不太一样，前端是一个成本很高的表单引擎，后端是一个业务流。
前端表单引擎可以通过定义 yaml 文件快速生成一个员工表单页面，甚至这个页面会根据登录的员工预填其个人信息，但这个引擎对开发非常不友好，生成出来的表单，想做一点修改都非常困难，比如记得当时有一个文字对齐的 bug，和表单引擎的开发团队聊完之后发现完全无能为力。表单在收集了员工填写的信息之后，会发给后端，后端整理一下数据然后触发一个业务流（当时我们调研了 Microsoft flow, AWS stepFunction 等工具后选了 Step Function), 业务流会根据表单内容相应地给员工 manager 和 HR 等相关人员在相应时间结点发邮件，创建工单。&lt;/p&gt;</description></item></channel></rss>